"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jss-plugin-global";
exports.ids = ["vendor-chunks/jss-plugin-global"];
exports.modules = {

/***/ "(ssr)/./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ \"(ssr)/./node_modules/jss/dist/jss.esm.js\");\n\n\nvar at = \"@global\";\nvar atPrefix = \"@global \";\nvar GlobalContainerRule = /*#__PURE__*/ function() {\n    function GlobalContainerRule(key, styles, options) {\n        this.type = \"global\";\n        this.at = at;\n        this.isProcessed = false;\n        this.key = key;\n        this.options = options;\n        this.rules = new jss__WEBPACK_IMPORTED_MODULE_1__.RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n            parent: this\n        }));\n        for(var selector in styles){\n            this.rules.add(selector, styles[selector]);\n        }\n        this.rules.process();\n    }\n    /**\n   * Get a rule.\n   */ var _proto = GlobalContainerRule.prototype;\n    _proto.getRule = function getRule(name) {\n        return this.rules.get(name);\n    } /**\n   * Create and register rule, run plugins.\n   */ ;\n    _proto.addRule = function addRule(name, style, options) {\n        var rule = this.rules.add(name, style, options);\n        if (rule) this.options.jss.plugins.onProcessRule(rule);\n        return rule;\n    } /**\n   * Replace rule, run plugins.\n   */ ;\n    _proto.replaceRule = function replaceRule(name, style, options) {\n        var newRule = this.rules.replace(name, style, options);\n        if (newRule) this.options.jss.plugins.onProcessRule(newRule);\n        return newRule;\n    } /**\n   * Get index of a rule.\n   */ ;\n    _proto.indexOf = function indexOf(rule) {\n        return this.rules.indexOf(rule);\n    } /**\n   * Generates a CSS string.\n   */ ;\n    _proto.toString = function toString(options) {\n        return this.rules.toString(options);\n    };\n    return GlobalContainerRule;\n}();\nvar GlobalPrefixedRule = /*#__PURE__*/ function() {\n    function GlobalPrefixedRule(key, style, options) {\n        this.type = \"global\";\n        this.at = at;\n        this.isProcessed = false;\n        this.key = key;\n        this.options = options;\n        var selector = key.substr(atPrefix.length);\n        this.rule = options.jss.createRule(selector, style, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n            parent: this\n        }));\n    }\n    var _proto2 = GlobalPrefixedRule.prototype;\n    _proto2.toString = function toString(options) {\n        return this.rule ? this.rule.toString(options) : \"\";\n    };\n    return GlobalPrefixedRule;\n}();\nvar separatorRegExp = /\\s*,\\s*/g;\nfunction addScope(selector, scope) {\n    var parts = selector.split(separatorRegExp);\n    var scoped = \"\";\n    for(var i = 0; i < parts.length; i++){\n        scoped += scope + \" \" + parts[i].trim();\n        if (parts[i + 1]) scoped += \", \";\n    }\n    return scoped;\n}\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n    var options = rule.options, style = rule.style;\n    var rules = style ? style[at] : null;\n    if (!rules) return;\n    for(var name in rules){\n        sheet.addRule(name, rules[name], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n            selector: addScope(name, rule.selector)\n        }));\n    }\n    delete style[at];\n}\nfunction handlePrefixedGlobalRule(rule, sheet) {\n    var options = rule.options, style = rule.style;\n    for(var prop in style){\n        if (prop[0] !== \"@\" || prop.substr(0, at.length) !== at) continue;\n        var selector = addScope(prop.substr(at.length), rule.selector);\n        sheet.addRule(selector, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, options, {\n            selector: selector\n        }));\n        delete style[prop];\n    }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n */ function jssGlobal() {\n    function onCreateRule(name, styles, options) {\n        if (!name) return null;\n        if (name === at) {\n            return new GlobalContainerRule(name, styles, options);\n        }\n        if (name[0] === \"@\" && name.substr(0, atPrefix.length) === atPrefix) {\n            return new GlobalPrefixedRule(name, styles, options);\n        }\n        var parent = options.parent;\n        if (parent) {\n            if (parent.type === \"global\" || parent.options.parent && parent.options.parent.type === \"global\") {\n                options.scoped = false;\n            }\n        }\n        if (!options.selector && options.scoped === false) {\n            options.selector = name;\n        }\n        return null;\n    }\n    function onProcessRule(rule, sheet) {\n        if (rule.type !== \"style\" || !sheet) return;\n        handleNestedGlobalContainerRule(rule, sheet);\n        handlePrefixedGlobalRule(rule, sheet);\n    }\n    return {\n        onCreateRule: onCreateRule,\n        onProcessRule: onProcessRule\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssGlobal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js\n");

/***/ })

};
;